name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-unit:
    name: Lint and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run unit tests (parser)
        run: npm run test:unit

  vscode-tests-and-package:
    name: VS Code integration tests and package
    needs: lint-and-unit
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run VS Code integration tests
        env:
          CI: true
          VSCODE_VERSION: insiders
        run: npm run test:integration

      - name: Package VSIX
        run: npm run package:vsix

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: blinter-vsix
          path: blinter.vsix

  publish-release:
    name: Publish VSIX to GitHub Release
    needs: vscode-tests-and-package
    # Only publish on tag pushes (release tags). This avoids publishing from every push/PR.
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: blinter-vsix
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./blinter.vsix
          asset_name: blinter.vsix
          asset_content_type: application/octet-stream
